name: Package and release chart

on:
  push:
    paths:
      - Chart.yaml
      - values.yaml
      - templates/**

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install zip
        run: sudo apt-get -y install zip

      - name: show pwd
        run: |
          pwd
          ls -la -R

      - name: Install Helm
        uses: azure/setup-helm@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version number
        run: |
          version=$(grep -m 1 'version' Chart.yaml | awk '{print $2}')
          echo $version
          major=$(echo $version | cut -d'.' -f1)
          minor=$(echo $version | cut -d'.' -f2)
          patch=$(echo $version | cut -d'.' -f3)
          new_minor=$(expr $minor + 1)
          echo "NEW_VERSION=$major.$new_minor.$patch" >> $GITHUB_ENV
          echo ${{ env.NEW_VERSION }}

      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Run helm-chart-releaser action
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: .
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}" # "${{ secrets.CR_TOKEN }}"
          CR_SKIP_EXISTING: true